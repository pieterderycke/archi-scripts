/*
 * Set the visual appereance correctly
 *  
 * Copyright: Pieter De Rycke (2021)
 */

console.log("Set Visual Appereance");

load(__DIR__ + "util/systemUtil.ajs");
load(__DIR__ + "util/visualUtils.ajs");

var NOTE_NAME = "NoteAddedThroughScript";

var ATTACH_LEGEND = true;

var notesToDelete = null;
var legendGroup = null;

if($(selection).first().type === "archimate-diagram-model") {
    notesToDelete = $(selection).find("diagram-model-note").filter("." + NOTE_NAME);
    legendGroup = $(selection).find("diagram-model-group").filter(".Legend");
}
else {
    notesToDelete = $(selection).children("diagram-model-note").filter("." + NOTE_NAME);
    legendGroup = $(selection).children("diagram-model-group").filter(".Legend");
}

console.log(String(legendGroup));

legendGroup.delete();
notesToDelete.each(function(noteToDelete) {
    noteToDelete.delete();
});

var elements = getSelectedElements(["application-component", "data-object"]);
elements.forEach(function(element) {
    var status = element.prop("Status");

    attachNote(element, status);
});

var relationships = getSelectedElements(["triggering-relationship", "access-relationship"]);
relationships.forEach(function(relationship) {
    var status = element.prop("Status");
    color = statusToColor(status);

    relationship.fontColor = color;
    relationship.lineColor = color;
    relationship.setLabelExpression("${property:Protocol}");
});

if(ATTACH_LEGEND) {
    attachLegend();
}

function attachNote(visualObject, status) {

    if(isValidStatus(status) && status !== "Existing"){
        var note = visualObject.createObject("note", 1, 1, 25, 25);
        note.name = NOTE_NAME;
        note.setText(statusToCharacter(status));
        note.fillColor = statusToColor(status);
    }
}

function attachLegend() {
    var labels = ["New", "Modified", "To Decommission"]
    var letters = ["N", "M", "D"]

    var view = selection.filter("archimate-diagram-model").first();

    legend = view.createObject("diagram-model-group", 1, 1, 200, 150);
    legend.name = "Legend";
    legend.fillColor = "#FFFFFF";

    createdBy = legend.createObject("note", 5, 25, 195, 25);
    createdBy.setText("Created By Pieter De Rycke (" + getUserName() + ").");
    createdBy.borderType = BORDER.NONE;
    createdBy.name = NOTE_NAME;

    for(var i = 0; i < labels.length; i++) {
        var status = labels[i];
        var letter = letters[i];

        icon = legend.createObject("note", 5, 55 + i * 30, 25, 25);
        icon.setText(letter);
        icon.fillColor = statusToColor(status);
        icon.name = NOTE_NAME;

        text = legend.createObject("note", 35, 55 + i * 30, -1, 25);
        text.setText(status);
        text.borderType = BORDER.NONE;
        text.name = NOTE_NAME;
    }
}

function isValidStatus(status) {
    if(status === "Existing") {
        return true;
    }
    if(status === "New") {
        return true;
    }
    else if(status === "Modified") {
        return true;
    }
    else if(status === "To Decommission") {
        return true;
    }
    else {
        return false;
    }
}

function statusToColor(status) {
    if(status === "New") {
        return "#008000"; // Green
    }
    else if(status === "Modified") {
        return "#FF8C00"; // Orange
    }
    else if(status === "To Decommission") {
        return "#FF0000"; // Red
    }
    else {
        return null;
    }
}

function statusToCharacter(status) {
    if(status === "New") {
        return "N";
    }
    else if(status === "Modified") {
        return "M";
    }
    else if(status === "To Decommission") {
        return "D";
    }
    else {
        return null;
    }
}